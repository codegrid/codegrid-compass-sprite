//==========================================
// スプライトマップ群

// 非Retina用
$icon-x1: sprite-map("icon/x1/*.png", $layout: smart);
// Retina用
$icon-x2: sprite-map("icon/x2/*.png", $layout: smart);

//==========================================
// 背景位置を出力するmixin

@mixin dpr-based-bg-position-no-repeat($map-x1, $map-x2, $name, $device-pixel-ratio) {

  // 非Retina用
  @if $device-pixel-ratio == 1 {
    // スプライトの位置を取得して指定
    $position: sprite-position($map-x1, $name);
    background-position: $position;
  }

  // Retina用
  @if $device-pixel-ratio == 2 {
    // スプライトの位置を取得
    $position: sprite-position($map-x2, $name);
    // background-sizeで本来のサイズの1/2に縮めているので
    // X, Yもそれぞれ半分にする
    $x: nth($position, 1) / 2;
    $y: nth($position, 2) / 2;
    // 計算した値を指定
    background-position: $x $y;
  }

}

//==========================================
// アイコンのベースクラス

// 非Retina用
%dpr1-icon-base {
  background-image: sprite-url($icon-x1);
}
// Retina用
%dpr2-icon-base {
  background-image: sprite-url($icon-x2);
  background-size: image-width(sprite-path($icon-x2)) / 2;
}

//==========================================
// 非Retina用、Retina用のセレクタを出力するmixin

@mixin icon($name) {

  // スプライトのファイルから幅、高さを取得して指定
  $sprite-file: sprite-file($icon-x1, $name);
  width: image-width($sprite-file);
  height: image-height($sprite-file);

  .dpr-1 & {
    @extend %dpr1-icon-base;
    @include dpr-based-bg-position-no-repeat($icon-x1, $icon-x2, $name, 1);
  }
  .dpr-2 & {
    @extend %dpr2-icon-base;
    @include dpr-based-bg-position-no-repeat($icon-x1, $icon-x2, $name, 2);
  }

}
